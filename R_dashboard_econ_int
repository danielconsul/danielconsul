---
title: "Economia internacional"
output: 
  flexdashboard::flex_dashboard:
    navbar:
      - { title: "Autor", href: "http://lattes.cnpq.br/3579437273217709", align: right}
    social: [ "menu" ]
    theme: spacelab
    favicon: icon.png
    orientation: columns
    vertical_layout: fill
runtime: shiny
---

<style>
p {
  text-align: justify;
  margin-right: 10px;
}
</style>

```{r setup, include=FALSE}
library(flexdashboard)
library(tidyverse)
library(rbcb)
library(reactable)
library(plotly)
library(scales)
library(shiny)
library(WDI)
```


```{r}
# Coleta de dados:

# Taxa de câmbio - Livre - Dólar americano (venda):
cambio_nom1 <- get_series(
  code = c(valor = 1),
  start_date = "1994-07-01",
  end_date = "2002-12-31"
)

cambio_nom2 <- get_series(
  code = c(valor = 1),
  start_date = "2003-01-01",
  end_date = "2012-12-31"
)

cambio_nom3 <- get_series(
  code = c(valor = 1),
  start_date = "2013-01-01",
  end_date = "2022-12-31"
)

cambio_nom4 <- get_series(
  code = c(valor = 1),
  start_date = "2023-01-01"
)

cambio_nom <- bind_rows(cambio_nom1, cambio_nom2, cambio_nom3, cambio_nom4)

cambio_nom <- cambio_nom %>% 
  mutate(
    var_mg = (valor / lag(valor) - 1) * 100
  ) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor = number(valor, decimal.mark = ",", accuracy = 0.01),
    var_mg = number(var_mg, decimal.mark = ",", accuracy = 0.01)
  ) %>%
  arrange(desc(date)) %>%
  select(data_fmt, valor, var_mg, date)

# Taxa de câmbio real (IPCA) - Jun/1994 = 100 - Dólar americano (código 11753):
cambio_real_dol <- get_series(
  code = c(valor = 11753),
  start_date = "1994-07-01"
) %>%
  mutate(
    var_mg = (valor / lag(valor) - 1) * 100,
    var_12m = (valor / lag(valor, 12) - 1) * 100
  ) %>%
  mutate(
    data_fmt = format(date, "%m/%Y"),
    valor = number(valor, decimal.mark = ",", accuracy = 0.01),
    var_mg = number(var_mg, decimal.mark = ",", accuracy = 0.01),
    var_12m = number(var_12m, decimal.mark = ",", accuracy = 0.01)
  ) %>%
  arrange(desc(date)) %>%
  select(data_fmt, valor, var_mg, var_12m, date)

# Taxa de câmbio real efetiva (IPCA) - Jun/1994 = 100  (código 11752):
cambio_real_efet <- get_series(
  code = c(valor = 11752),
  start_date = "1994-07-01"
) %>%
  mutate(
    var_mg = (valor / lag(valor) - 1) * 100,
    var_12m = (valor / lag(valor, 12) - 1) * 100
  ) %>%
  mutate(
    data_fmt = format(date, "%m/%Y"),
    valor = number(valor, decimal.mark = ",", accuracy = 0.01),
    var_mg = number(var_mg, decimal.mark = ",", accuracy = 0.01),
    var_12m = number(var_12m, decimal.mark = ",", accuracy = 0.01)
  ) %>%
  arrange(desc(date)) %>%
  select(data_fmt, valor, var_mg, var_12m, date)

# Reservas internacionais (código 3546):
res_int <- get_series(
  code = c(valor = 3546),
  start_date = "1970-12-01"
) %>% mutate(
    valor = valor / 1000,
    var_mg = (valor / lag(valor) - 1) * 100,
    var_12m = (valor / lag(valor, 12) - 1) * 100
  ) %>%
  mutate(
    data_fmt = format(date, "%m/%Y"),
    valor = number(valor, big.mark = ".", decimal.mark = ",", accuracy = 0.01),
    var_mg = number(var_mg, decimal.mark = ",", accuracy = 0.01),
    var_12m = number(var_12m, decimal.mark = ",", accuracy = 0.01)
  ) %>%
  arrange(desc(date)) %>%
  select(data_fmt, valor, var_mg, var_12m, date)

# Dívida externa bruta (código 3684):
div_bruta <- get_series(
  code = c(valor = 3684),
  start_date = "1981-01-01"
) %>%
  mutate(
    valor = valor / 1000,
    data_fmt = format(date, "%m/%Y"),
    valor = number(valor, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  arrange(desc(date)) %>%
  select(data_fmt, valor, date)

# Dívida externa líquida (código 3685):
div_liq <- get_series(
  code = c(valor = 3685),
  start_date = "1987-01-01"
) %>%
  mutate(
    valor = valor / 1000,
    data_fmt = format(date, "%m/%Y"),
    valor = number(valor, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  arrange(desc(date)) %>%
  select(data_fmt, valor, date)

# Reservas internacionais totais como % da dívida externa total (código FI.RES.TOTL.DT.ZS):
res_int_div_ext <- WDI(
  country = "BR",
  indicator = "FI.RES.TOTL.DT.ZS",
  start = 1971
) %>% mutate(
  ano = year,
  valor = FI.RES.TOTL.DT.ZS,
  valor = number(valor, decimal.mark = ",", accuracy = 0.01)
) %>% select(ano, valor)

# Reservas internacionais (em meses de importações) (código FI.RES.TOTL.MO):
res_int_imports <- WDI(
  country = "BR",
  indicator = "FI.RES.TOTL.MO",
  start = 1975
) %>% mutate(
  ano = year,
  valor = FI.RES.TOTL.MO,
  valor = number(valor, decimal.mark = ",", accuracy = 0.01)
) %>% select(ano, valor)

# Câmbio contratado comercial exportação (código 13962):
cambio_exp1 <- get_series(
  code = c(valor_exp = 13962),
  start_date = "2008-09-01",
  end_date = "2017-12-31"
) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor_exp = number(valor_exp, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  select(data_fmt, valor_exp, date)

cambio_exp2 <- get_series(
  code = c(valor_exp = 13962),
  start_date = "2018-01-01"
) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor_exp = number(valor_exp, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  select(data_fmt, valor_exp, date)

cambio_exp <- bind_rows(cambio_exp1, cambio_exp2) %>%
  arrange(desc(date)) 

# Câmbio contratado comercial importação (código 13966):
cambio_imp1 <- get_series(
  code = c(valor_imp = 13966),
  start_date = "2008-09-01",
  end_date = "2017-12-31" # No máximo 10 anos
) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor_imp = number(valor_imp, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  select(data_fmt, valor_imp, date)

cambio_imp2 <- get_series(
  code = c(valor_imp = 13966),
  start_date = "2018-01-01"
) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor_imp = number(valor_imp, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  select(data_fmt, valor_imp, date)

cambio_imp <- bind_rows(cambio_imp1, cambio_imp2) %>%
  arrange(desc(date)) 

# Câmbio contratado comercial saldo (código 11047):
cambio_saldo_com1 <- get_series(
  code = c(valor_saldo_com = 13967),
  start_date = "2008-09-01",
  end_date = "2017-12-31"
) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor_saldo_com = number(valor_saldo_com, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  select(data_fmt, valor_saldo_com, date)

cambio_saldo_com2 <- get_series(
  code = c(valor_saldo_com = 13967),
  start_date = "2018-01-01"
) %>%
  mutate(
    data_fmt = format(date, "%d/%m/%Y"),
    valor_saldo_com = number(valor_saldo_com, big.mark = ".", decimal.mark = ",", accuracy = 0.01)
  ) %>%
  select(data_fmt, valor_saldo_com, date)

cambio_saldo_com <- bind_rows(cambio_saldo_com1, cambio_saldo_com2) %>%
  arrange(desc(date))

cambio_com <- left_join(cambio_exp, cambio_imp)
cambio_com <- left_join(cambio_com, cambio_saldo_com)

cambio_com <- cambio_com %>% select(data_fmt, valor_exp, valor_imp, valor_saldo_com, date)
```

# Visão geral
Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------
O presente _dashboard_ objetiva apresentar de forma centralizada uma série de dados macroeconômicos relacionados às contas externas da economia brasileira. São apresentadas informações referentes à taxa de câmbio, balanço de pagamentos, reservas internacionais e dívida externa. Em geral, os dados apresentam frequência diária ou mensal.

**Última atualização:** `r format(Sys.Date(), format = "%d/%m/%Y")`

Column {data-width=800}
-----------------------------------------------------------------------
```{r}

```

# Taxa de câmbio nominal {data-navmenu="Taxa de câmbio"}

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------
**Taxa de câmbio nominal (dólar americano) - Venda:** Série diária do dólar comercial. Taxas administradas e livres. Código 1 no Sistema Gerenciador de Séries Temporais do Banco Central do Brasil.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### Nível (R$)

```{r}
plot_ly(
  data = cambio_nom, 
  x = ~date, 
  y = ~valor, 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ", dtick = 30)
  ) %>% rangeslider(thickness = 0.05)
```

Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese

```{r, results='asis'}
reactable(
  cambio_nom[, -4],
  columns = list(
    data_fmt = colDef(
      name = "Data",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Taxa de câmbio (R$)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_mg = colDef(
      name = "Variação diária (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",  # texto
    backgroundColor = "white",  # fundo
    borderColor = "black",  # bordas
    stripedColor = "#D6EAF8",  # faixas alternadas
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```

# Taxa de câmbio real (dólar americano) {data-navmenu="Taxa de câmbio"} 

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------

**Taxa de câmbio real (dólar americano) - Jun/1994 = 100:** Série mensal que reflete a variação da moeda nacional em relação a uma determinada moeda estrangeira, corrigida pelo diferencial entre as inflações do país (IPCA) e do país estrangeiro (IPC). Código 11752 no Sistema Gerenciador de Séries Temporais do Banco Central do Brasil.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### Nível (Índice jun/1994 = 100)
```{r}
plot_ly(
  data = cambio_real_dol, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", valor)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Variação mensal (%)
```{r}
plot_ly(
  data = cambio_real_dol, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", var_mg)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Variação em 12 meses (%)
```{r}
plot_ly(
  data = cambio_real_dol, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", var_12m)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ", dtick = 10)
  ) %>% rangeslider(thickness = 0.05)
```

Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese

```{r}
reactable(
  cambio_real_dol[, -5],
  columns = list(
    data_fmt = colDef(
      name = "Data",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Câmbio real",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_mg = colDef(
      name = "Variação mensal (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_12m = colDef(
      name = "Variação em 12 meses (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```

# Taxa de câmbio real efetiva {data-navmenu="Taxa de câmbio"} 

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------

**Taxa de câmbio real efetiva - Jun/1994 = 100:** Série mensal gerada a partir do cálculo da taxa de câmbio real em relação a um conjunto de países e moedas (uma cesta de países e moedas), em geral escolhidos conforme sua importância no comércio exterior, em vez de realizar o cálculo restrito a uma única relação bilateral. Código 11753 no Sistema Gerenciador de Séries Temporais do Banco Central do Brasil.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### Nível (índice jun/1994 = 100)
```{r}
plot_ly(
  data = cambio_real_efet, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", valor)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Variação mensal (%)
```{r}
plot_ly(
  data = cambio_real_efet, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", var_mg)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Variação em 12 meses (%)
```{r}
plot_ly(
  data = cambio_real_efet, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", var_12m)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ", dtick = 10)
  ) %>% rangeslider(thickness = 0.05)
```

Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese

```{r}
reactable(
  cambio_real_efet[, -5],
  columns = list(
    data_fmt = colDef(
      name = "Data",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Câmbio real",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_mg = colDef(
      name = "Variação mensal (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_12m = colDef(
      name = "Variação em 12 meses (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```


# Movimento de câmbio contratado {data-navmenu="Taxa de câmbio"}

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------
**Câmbio contratado comercial (exportações):** Somatório das contratações de compra de moeda estrangeira efetuadas pelos bancos comerciais junto ao mercado não financeiro relativas a exportações de bens. Código 13962 no Sistema Gerenciador de Séries Temporais do Banco Central do Brasil (SGST/BCB).

**Câmbio contratado comercial (importações):** Somatório das contratações de venda de moeda estrangeira efetuadas pelos bancos comerciais ao mercado não financeiro relativas a importações de bens. Código 13966 no SGST/BCB.

**Câmbio contratado comercial (saldo):** Resultado líquido de contratações de câmbio comercial de exportação e de importação. Código 13967 no SGST/BCB.

**Câmbio contratado financeiro (compras):** Somatório das contratações de compra de moeda estrangeira efetuadas pelos bancos comerciais junto ao mercado não financeiro relativas a exportação de serviços e ingressos de capitais estrangeiros ou retorno de capitais brasileiros. Não inclui operações de câmbio de compra e venda junto ao Banco Central do Brasil. Código 13968 no SGST/BCB.

**Câmbio contratado financeiro (vendas):** Somatório das contratações de venda de moeda estrangeira efetuadas pelos bancos comerciais junto ao mercado não financeiro relativas a importação de serviços e saídas de capitais estrangeiros ou brasileiros. Não inclui operações de câmbio de compra e venda junto ao Banco Central do Brasil. Código 13969 no SGST/BCB.

**Câmbio contratado financeiro (saldo):** Resultado líquido de contratações de câmbio financeiro de compra e venda. Não inclui operações de câmbio de compra e venda junto ao Banco Central do Brasil. Código 13970 no SGST/BCB.

Todos os valores estão em milhões de dólares.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### Exportações (1)
```{r}

```

### Importações (2)
```{r}

```

### Saldo comercial (1-2)
```{r}

```

### Compras (3)
```{r}

```

### Vendas (4)
```{r}

```

### Saldo financeiro (3-4)
```{r}

```

Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese
```{r}

```


# Transações correntes {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Balança comercial {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Exportações {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Importações {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Balança de serviços {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Renda primária {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Renda secundária {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Conta capital {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Conta financeira {data-navmenu="Balanço de pagamentos"}
```{r}

```

# Reservas internacionais

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------

**Reservas internacionais**: As reservas internacionais compreendem os ativos externos do país prontamente disponíveis e mantidos pelo Banco Central do Brasil com o objetivo de financiar eventuais déficits do balanço de pagamentos.

De acordo com o [Relatório de Gestão das Reservas Internacionais](https://www.bcb.gov.br/publicacoes/relgestaoreservas) do Banco Central do Brasil de março de 2025, em dezembro de 2024 a alocação das reservas por moedas se dava da seguinte maneira: 78,45% em dólar americano (USD), 5,31% em renminbi (CNY), 5,23% em euro (EUR), 3,69% em libra esterlina (GBP), 3,55% em ouro, 1,73% em iene (JPY), 1,05% em dólar canadense (CAD) e 0,99% em dólar australiano (AUD).

Também em dezembro de 2024, 84,08% das reservas pelo conceito caixa estavam aplicadas em títulos governamentais soberanos.

O prazo médio de investimento em 2024 foi de 3,19 anos.

Fonte: Sistema Gerenciador de Séries Temporais do Banco Central do Brasil (código 3546) e DataBank/World Bank.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### US$ bilhões
```{r}
plot_ly(
  data = res_int, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", valor)),
  type = "scatter",
  mode = "lines",
  fill = "tozeroy"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Var. mensal (%)
```{r}
plot_ly(
  data = res_int, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", var_mg)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Var. 12 meses (%)
```{r}
plot_ly(
  data = res_int, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", var_12m)), 
  type = "scatter",
  mode = "lines"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ", dtick = 20)
  ) %>% rangeslider(thickness = 0.05)
```

### % dívida externa total
```{r}
plot_ly(
  data = res_int_div_ext, 
  x = ~ano, 
  y = ~as.numeric(gsub(",", ".", valor)),
  type = "bar"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

### Meses de importações
```{r}
plot_ly(
  data = res_int_imports, 
  x = ~ano, 
  y = ~as.numeric(gsub(",", ".", valor)),
  type = "bar"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```


Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese

```{r}
reactable(
  res_int[, -5],
  columns = list(
    data_fmt = colDef(
      name = "Data",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Reservas internacionais (US$ bilhões)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_mg = colDef(
      name = "Variação mensal (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    var_12m = colDef(
      name = "Variação em 12 meses (%)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```

### % dívida externa total

```{r}
reactable(
  res_int_div_ext,
  columns = list(
    ano = colDef(
      name = "Ano",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Reservas internacionais (% dívida externa total)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```

### Meses de importações

```{r}
reactable(
  res_int_imports,
  columns = list(
    ano = colDef(
      name = "Ano",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Reservas internacionais (meses de importações)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```

# Dívida externa bruta {data-navmenu="Dívida externa"}

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------
**Dívida externa bruta:** A estatística da dívida externa compreende o total apurado em determinada data dos débitos contratuais efetivamente desembolsados e ainda não quitados, devidos por residentes de uma economia aos não residentes, quando houver a obrigatoriedade de pagamento de principal e/ou juros em algum(s) ponto(s) no futuro. O valor de mercado da dívida externa bruta impacta os valores a partir de dezembro de 2011 e abrange os títulos de dívida emitidos pela República no mercado internacional, ajustados segundo seu preço de mercado, e os demais instrumentos e emissores de dívida externa, apurados em valor nominal. Código 3684 no Sistema Gerenciador de Séries Temporais do Banco Central do Brasil.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### Nível (US$ bilhões)
```{r}
plot_ly(
  data = div_bruta, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", valor)),
  type = "scatter",
  mode = "lines",
  fill = "tozeroy"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese

```{r}
reactable(
  div_bruta[, -3],
  columns = list(
    data_fmt = colDef(
      name = "Data",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Dívida externa bruta (US$ bilhões)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```

# Dívida externa líquida {data-navmenu="Dívida externa"}

Column {.sidebar} {data-width=200}
-----------------------------------------------------------------------
**Dívida externa líquida:** Refere-se à dívida externa brua excluindo do cálculo os ativos de reservas, os haveres de bancos comerciais e os créditos brasileiros no exterior. Código 3685 no Sistema Gerenciador de Séries Temporais do Banco Central do Brasil.

Column {data-width=400} {.tabset}
-----------------------------------------------------------------------

### Nível (US$ bilhões)
```{r}
plot_ly(
  data = div_liq, 
  x = ~date, 
  y = ~as.numeric(gsub(",", ".", valor)),
  type = "scatter",
  mode = "lines",
  fill = "tozeroy"
) %>%
  layout(
    xaxis = list(title = " "),
    yaxis = list(title = " ")
  ) %>% rangeslider(thickness = 0.05)
```

Column {data-width=400}  {.tabset}
-----------------------------------------------------------------------

### Síntese

```{r}
reactable(
  div_liq[, -3],
  columns = list(
    data_fmt = colDef(
      name = "Data",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    ),
    valor = colDef(
      name = "Dívida externa líquida (US$ bilhões)",
      align = "center",
      headerStyle = list(textAlign = "center", verticalAlign = "middle")
    )
  ),
  bordered = TRUE,
  highlight = TRUE,
  striped = TRUE,
  resizable = TRUE,
  defaultPageSize = 25,
  theme = reactableTheme(
    color = "black",
    backgroundColor = "white",
    borderColor = "black",
    stripedColor = "#D6EAF8",
    cellPadding = "8px 12px",
    style = list(fontFamily = "Segoe UI, sans-serif", fontSize = "14px"),
    headerStyle = list(background = "white", fontWeight = "bold", textAlign = "center", verticalAlign = "middle")
  )
)
```
